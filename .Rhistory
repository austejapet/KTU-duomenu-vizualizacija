library(dplyr)
library(tidyverse)
library(ggplot2)
library(readr)
dataFile<- read_csv("laboratorinis/data/lab_sodra.csv")
setwd("C:/Users/37060/Desktop/ktu/2 semestras/duomenu tvarkymas/duomenu vizualizavimas/KTU-duomenu-vizualizacija")
dataFile<- read_csv("laboratorinis/data/lab_sodra.csv")
summary(dataFile)
dataFile<- filter(dataFile, dataFile$ecoActCode==949900)
hist(dataFile$avgWage, main = NULL,
xlab = "avgWage",
ylab = "count",
col = "gray28",
breaks = 100,
border = "gray28",
xlim = c(0, 5000))
filtered <- dataFile %>%
summarise(suma = sum(avgWage)) %>%
arrange(desc(suma)) %>% head(5)
merged <- merge(filtered, dataFile, by = code)
merged <- merge(filtered, dataFile, by = "code")
merged <- merge(filtered, dataFile, by = "code")
View(filtered)
filtered <- dataFile %>%
group_by(code) %>%
summarise(suma = sum(avgWage)) %>%
arrange(desc(suma)) %>% head(5)
filtered <- dataFile %>%
filter(ecoActCode == 452000) %>%
group_by(code) %>%
summarise(suma = sum(avgWage)) %>%
arrange(desc(suma)) %>% head(5)
filtered <- dataFile %>%
filter(ecoActCode == 949900) %>%
group_by(code) %>%
summarise(suma = sum(avgWage)) %>%
arrange(desc(suma)) %>% head(5)
View(filtered)
ggplot(merged, aes(x=month, y=avgWage, group = name, color = name)) +
geom_line() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
merged <- merge(filtered, dataFile, by = "code")
ggplot(merged, aes(x=month, y=avgWage, group = name, color = name)) +
geom_line() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
filtered <- dataFile %>%
group_by(code) %>%
summarise(suma = sum(avgWage)) %>%
arrange(desc(suma)) %>% head(5)
View(filtered)
filtered <- dataFile %>%
group_by(code) %>%
summarise(suma = sum(avgWage)) %>%
arrange(desc(suma)) %>% head(5)
merged <- merge(filtered, dataFile, by = "code")
ggplot(merged, aes(x=month, y=avgWage, group = name, color = name)) +
geom_line() +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
group_by(merged, name) %>%
summarise(maxNumInsured = max(numInsured)) %>%
ggplot(aes(x=reorder(name, -maxNumInsured), y=maxNumInsured, group = name,
fill=name )) +
geom_bar(stat="identity") +
xlab("name") +
ylab("apdraustieji") +
theme(panel.background = element_blank(),
axis.line = element_line(colour = "black"))
library(shiny)
library(tidyverse)
ui <- fluidPage(titlePanel("949900"),
sidebarLayout(
sidebarPanel(
selectizeInput(inputId = "imones_kodas", label = "Įveskite įmonės kodą",
choices = NULL, selected = NULL)
),
mainPanel(tabsetPanel(
tabPanel("grafikas", plotOutput("plot")),
tabPanel("lentelė", tableOutput("table"))
)
)
)
)
server <- function(input, output, session) {
data <- read_csv("https://github.com/austejapet/KTU-duomenu-vizualizacija/raw/main/laboratorinis/data/lab_sodra.csv")
data<- filter(data, data$ecoActCode==949900)
updateSelectizeInput(session, "imones_kodas", choices = data$code, server = TRUE)
output$table <- renderTable(
data %>%
filter(code == input$imones_kodas) , digits = 0
)
output$plot <- renderPlot(
data %>%
filter(code == input$imones_kodas) %>%
ggplot(aes(x = month, y = avgWage, group = name, colour = name)) +
geom_line(stat="identity") +
theme(legend.text=element_blank()) +
theme(panel.background = element_blank(),
axis.line = element_line(colour = "black"))
)
}
shinyApp(ui, server)
